// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.9.2 (swiftlang-5.9.2.2.56 clang-1500.1.0.2.5)
// swift-module-flags: -target arm64-apple-ios12.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name C2CB_iOS_Library
// swift-module-flags-ignorable: -enable-bare-slash-regex
import AVFoundation
@_exported import C2CB_iOS_Library
import CallKit
import CoreLocation
import Foundation
import PushKit
import Swift
import TwilioVoice
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class C2CSdkCountryCodeViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillLayoutSubviews()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension C2CB_iOS_Library.C2CSdkCountryCodeViewController : UIKit.UITableViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func tableView(_ tableView: UIKit.UITableView, didSelectRowAt indexPath: Foundation.IndexPath)
}
extension C2CB_iOS_Library.C2CSdkCountryCodeViewController : UIKit.UITableViewDataSource {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func numberOfSections(in tableView: UIKit.UITableView) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc dynamic public func tableView(_ tableView: UIKit.UITableView, numberOfRowsInSection section: Swift.Int) -> Swift.Int
  @_Concurrency.MainActor(unsafe) @objc dynamic public func tableView(_ tableView: UIKit.UITableView, cellForRowAt indexPath: Foundation.IndexPath) -> UIKit.UITableViewCell
}
extension C2CB_iOS_Library.C2CSdkCountryCodeViewController : UIKit.UISearchBarDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func searchBar(_ searchBar: UIKit.UISearchBar, textDidChange searchText: Swift.String)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func searchBarTextDidBeginEditing(_ searchBar: UIKit.UISearchBar)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func searchBarTextDidEndEditing(_ searchBar: UIKit.UISearchBar)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func searchBarCancelButtonClicked(_ searchBar: UIKit.UISearchBar)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func searchBarSearchButtonClicked(_ searchBar: UIKit.UISearchBar)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func searchBarShouldBeginEditing(_ searchBar: UIKit.UISearchBar) -> Swift.Bool
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class C2CSdkBaseViewController : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillAppear(_ animated: Swift.Bool)
  @_Concurrency.MainActor(unsafe) public func getIPDetails()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension C2CB_iOS_Library.C2CSdkBaseViewController : CoreLocation.CLLocationManagerDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func locationManager(_ manager: CoreLocation.CLLocationManager, didChangeAuthorization status: CoreLocation.CLAuthorizationStatus)
}
@_hasMissingDesignatedInitializers open class C2CSdkEmailValidationModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers open class C2CSdkCallHandler : ObjectiveC.NSObject {
  @objc deinit
  @objc override dynamic public init()
}
extension C2CB_iOS_Library.C2CSdkCallHandler : TwilioVoice.NotificationDelegate {
  @objc dynamic public func callInviteReceived(callInvite: TwilioVoice.CallInvite)
  @objc dynamic public func cancelledCallInviteReceived(cancelledCallInvite: TwilioVoice.CancelledCallInvite, error: any Swift.Error)
}
extension C2CB_iOS_Library.C2CSdkCallHandler : TwilioVoice.CallDelegate {
  @objc dynamic public func callDidStartRinging(call: TwilioVoice.Call)
  @objc dynamic public func callDidConnect(call: TwilioVoice.Call)
  public func call(call: TwilioVoice.Call, isReconnectingWithError error: any Swift.Error)
  @objc dynamic public func callDidReconnect(call: TwilioVoice.Call)
  @objc dynamic public func callDidFailToConnect(call: TwilioVoice.Call, error: any Swift.Error)
  @objc dynamic public func callDidDisconnect(call: TwilioVoice.Call, error: (any Swift.Error)?)
  public func callDisconnected(call: TwilioVoice.Call)
  @objc dynamic public func callDidReceiveQualityWarnings(call: TwilioVoice.Call, currentWarnings: Swift.Set<Foundation.NSNumber>, previousWarnings: Swift.Set<Foundation.NSNumber>)
  public func qualityWarningsUpdatePopup(_ warnings: Swift.Set<Foundation.NSNumber>, isCleared: Swift.Bool)
  public func warningString(_ warning: TwilioVoice.Call.QualityWarning) -> Swift.String
  public func playRingback()
  public func stopRingback()
}
extension C2CB_iOS_Library.C2CSdkCallHandler : CallKit.CXProviderDelegate {
  @objc dynamic public func providerDidReset(_ provider: CallKit.CXProvider)
  @objc dynamic public func providerDidBegin(_ provider: CallKit.CXProvider)
  @objc dynamic public func provider(_ provider: CallKit.CXProvider, didActivate audioSession: AVFAudio.AVAudioSession)
  @objc dynamic public func provider(_ provider: CallKit.CXProvider, didDeactivate audioSession: AVFAudio.AVAudioSession)
  @objc dynamic public func provider(_ provider: CallKit.CXProvider, timedOutPerforming action: CallKit.CXAction)
  @objc dynamic public func provider(_ provider: CallKit.CXProvider, perform action: CallKit.CXStartCallAction)
  @objc dynamic public func provider(_ provider: CallKit.CXProvider, perform action: CallKit.CXEndCallAction)
  @objc dynamic public func provider(_ provider: CallKit.CXProvider, perform action: CallKit.CXSetHeldCallAction)
  @objc dynamic public func provider(_ provider: CallKit.CXProvider, perform action: CallKit.CXSetMutedCallAction)
}
extension C2CB_iOS_Library.C2CSdkCallHandler : AVFAudio.AVAudioPlayerDelegate {
  @objc dynamic public func audioPlayerDidFinishPlaying(_ player: AVFAudio.AVAudioPlayer, successfully flag: Swift.Bool)
  @objc dynamic public func audioPlayerDecodeErrorDidOccur(_ player: AVFAudio.AVAudioPlayer, error: (any Swift.Error)?)
}
public enum WebService : Swift.String {
  case baseURLPath
  case termConditionUrl
  case contextToCallUrl
  case radar_auth_key
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
public typealias EIArray = [Any]
public typealias EIDictonary = [Swift.String : Any]
public typealias EIDictonaryToDictionary = [Swift.String : [Swift.String : Any]]
public typealias EIDictonaryArray = [[Swift.String : Any]]
public typealias alertActionHandler = () -> Swift.Void
@objc @_inheritsConvenienceInitializers public class C2CSdkConstant : ObjectiveC.NSObject {
  public var callBtn: Swift.Bool?
  public var smsBtn: Swift.Bool?
  public var emailBtn: Swift.Bool?
  public static var bundle_idenitifier: Swift.String?
  public static var IS_IPAD: (Swift.Bool)
  public static var bundle: Foundation.Bundle {
    get
  }
  public static func getImage(named: Swift.String) -> UIKit.UIImage?
  @objc override dynamic public init()
  @objc deinit
}
extension UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) public func doneKeyboard(dismissOnTap: Swift.Bool)
}
@_hasMissingDesignatedInitializers public class ImageDownloader {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class C2CSdkSMSValidationSetUp : C2CB_iOS_Library.C2CSdkBaseViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillLayoutSubviews()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension C2CB_iOS_Library.C2CSdkSMSValidationSetUp : UIKit.UITextViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func textViewDidBeginEditing(_ textView: UIKit.UITextView)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func textViewDidEndEditing(_ textView: UIKit.UITextView)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func textView(_ textView: UIKit.UITextView, shouldChangeTextIn range: Foundation.NSRange, replacementText text: Swift.String) -> Swift.Bool
  @_Concurrency.MainActor(unsafe) @objc dynamic public func textViewDidChange(_ textView: UIKit.UITextView)
}
extension C2CB_iOS_Library.C2CSdkSMSValidationSetUp : UIKit.UITextFieldDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func textFieldDidEndEditing(_ textField: UIKit.UITextField)
}
@_hasMissingDesignatedInitializers open class C2CSdkOutgoingCallModelView {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class C2CSdkOutgoingCallUISetup : UIKit.UIViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @objc deinit
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillLayoutSubviews()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
}
@_hasMissingDesignatedInitializers open class C2CSdkContryCodeModelView {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class C2CSdkEmailValidationSetUp : C2CB_iOS_Library.C2CSdkBaseViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillLayoutSubviews()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension C2CB_iOS_Library.C2CSdkEmailValidationSetUp : UIKit.UITextViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func textViewDidBeginEditing(_ textView: UIKit.UITextView)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func textViewDidEndEditing(_ textView: UIKit.UITextView)
}
extension C2CB_iOS_Library.C2CSdkEmailValidationSetUp : UIKit.UITextFieldDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func textFieldDidEndEditing(_ textField: UIKit.UITextField)
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @IBDesignable @_Concurrency.MainActor(unsafe) public class C2CSdkCustomView : UIKit.UIView {
  @objc @IBInspectable @_Concurrency.MainActor(unsafe) public var width: CoreFoundation.CGFloat {
    @objc get
    @objc set
  }
  @objc @IBInspectable @_Concurrency.MainActor(unsafe) public var height: CoreFoundation.CGFloat {
    @objc get
    @objc set
  }
  @objc @IBInspectable @_Concurrency.MainActor(unsafe) public var channel_id: Swift.String {
    @objc get
    @objc set(channel_id_value)
  }
  @_Concurrency.MainActor(unsafe) @objc override dynamic public func prepareForInterfaceBuilder()
  @objc deinit
}
@_hasMissingDesignatedInitializers open class C2CSdkCallValidationModel {
  @objc deinit
}
@_hasMissingDesignatedInitializers open class C2CSdkSmsValidationModel {
  @objc deinit
}
@objc @_inheritsConvenienceInitializers @_Concurrency.MainActor(unsafe) open class C2CSdkCallValidationSetUp : C2CB_iOS_Library.C2CSdkBaseViewController {
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewDidLoad()
  @_Concurrency.MainActor(unsafe) @objc override dynamic open func viewWillLayoutSubviews()
  @_Concurrency.MainActor(unsafe) @objc override dynamic public init(nibName nibNameOrNil: Swift.String?, bundle nibBundleOrNil: Foundation.Bundle?)
  @_Concurrency.MainActor(unsafe) @objc required dynamic public init?(coder: Foundation.NSCoder)
  @objc deinit
}
extension C2CB_iOS_Library.C2CSdkCallValidationSetUp : UIKit.UITextViewDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func textViewDidBeginEditing(_ textView: UIKit.UITextView)
  @_Concurrency.MainActor(unsafe) @objc dynamic public func textViewDidEndEditing(_ textView: UIKit.UITextView)
}
extension C2CB_iOS_Library.C2CSdkCallValidationSetUp : UIKit.UITextFieldDelegate {
  @_Concurrency.MainActor(unsafe) @objc dynamic public func textFieldDidEndEditing(_ textField: UIKit.UITextField)
}
public func C2CSdkshowAlert(title: Swift.String, message: Swift.String, view: UIKit.UIViewController)
public func C2CSdkshowAlertWithOkAction(title: Swift.String, message: Swift.String, view: UIKit.UIViewController, actionHandler: @escaping C2CB_iOS_Library.alertActionHandler)
public func C2CSdkvalidateEmailID(emailID: Swift.String) -> Swift.Bool
public func C2CSdkvalidateNumber(number: Swift.String) -> Swift.Bool
public func C2CSdkisValid(name: Swift.String) -> Swift.Bool
@_hasMissingDesignatedInitializers public class ChannelMode {
  public static var callBtn: Swift.Bool
  @objc deinit
}
extension C2CB_iOS_Library.WebService : Swift.Equatable {}
extension C2CB_iOS_Library.WebService : Swift.Hashable {}
extension C2CB_iOS_Library.WebService : Swift.RawRepresentable {}
